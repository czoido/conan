name: CI Pipeline

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  linux_unittests:
    needs: cancel_previous
    runs-on: ubuntu-latest
    container:
      image: conanio/ci-unittests
      options: --user 1000:1000
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        run: |
          pip install --upgrade pip
          pip install -r conans/requirements.txt
          pip install -r conans/requirements_dev.txt
          pip install meson

      - name: Run tests
        run: |
          pytest test/unittests --durations=20 -n 4

  # linux_functional:
  #   needs: cancel_previous
  #   runs-on: ubuntu-latest
  #   container:
  #     image: conanio/ci-functional
  #   strategy:
  #     matrix:
  #       python-version: [3.8, 3.9, 3.12]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Python ${{ matrix.python-version }}
  #       run: |
  #         pip install --upgrade pip
  #         pip install -r conans/requirements.txt
  #         pip install -r conans/requirements_dev.txt
  #         pip install meson

  #     - name: Run tests
  #       run: |
  #         pytest test/functional --durations=20 -n 4

  # windows_tests:
  #   needs: cancel_previous
  #   runs-on: windows-latest
  #   strategy:
  #     matrix:
  #       python-version: [3.8, 3.9, 3.12]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r conans/requirements.txt
  #         pip install -r conans/requirements_dev.txt
  #         pip install meson

  #     - name: Run tests
  #       run: |
  #         pytest test/unittests --durations=20 -n 4

  # macos_tests:
  #   needs: cancel_previous
  #   runs-on: macos-latest
  #   strategy:
  #     matrix:
  #       python-version: [3.8, 3.9, 3.12]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r conans/requirements.txt
  #         pip install -r conans/requirements_dev.txt
  #         pip install meson

  #     - name: Run tests
  #       run: |
  #         pytest test/unittests --durations=20 -n 4

  deploy_pypitest:
    if: github.ref == 'refs/heads/develop2'
    runs-on: ubuntu-latest
    container:
      image: conanio/ci-functional
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies for deployment
        run: |
          python -m pip install --upgrade pip
          python -m pip install twine
          python .ci/bump_dev_version.py

      - name: Build and deploy to TestPyPI
#        env:
#          TWINE_USERNAME: ${{ secrets.PYPITEST_CONAN_CREDENTIALS_USERNAME }}
#          TWINE_PASSWORD: ${{ secrets.PYPITEST_CONAN_CREDENTIALS_PASSWORD }}
        run: |
          rm -rf dist/
          python setup.py sdist
#          twine upload --repository-url https://test.pypi.org/legacy/ dist/*
